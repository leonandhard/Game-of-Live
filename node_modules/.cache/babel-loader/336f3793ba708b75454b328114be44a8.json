{"ast":null,"code":"var _jsxFileName = \"/Users/leonhard/Documents/Leonhard\\u2018s work/react/Game-of-Live/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useCallback, useRef } from 'react';\nimport produce from 'immer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst numRows = 50;\nconst numCols = 50;\nconst operations = [[0, 1], [0, -1], [1, 1], [1, -1], [-1, 1], [-1, -1], [-1, 0], [1, 0]];\n\nfunction App() {\n  _s();\n\n  const [grid, setGrid] = useState(() => {\n    const rows = [];\n\n    for (let i = 0; i < numRows; i++) {\n      rows.push(Array.from(Array(numCols), () => 0));\n    }\n\n    return rows;\n  }); // console.log(grid);\n\n  const [running, setRunning] = useState(false);\n  const runningRef = useRef(running);\n  runningRef.current = running;\n  const runSimulation = useCallback(() => {\n    if (!runningRef.current) {\n      return;\n    }\n\n    setGrid(g => {\n      return produce(g, gridCopy => {\n        for (let i = 0; i < numRows; i++) {\n          for (let k = 0; k < numCols; k++) {\n            let neighbors = 0;\n            operations.forEach(_ref => {\n              let [x, y] = _ref;\n              const newI = x + i;\n              const newK = y + k;\n\n              if (newI >= 0 && newI < numRows && newK >= 0 && newK < numCols) {\n                neighbors += g[newI][newK];\n              }\n            });\n\n            if (neighbors < 2 || neighbors > 3) {\n              gridCopy[i][k] = 0;\n            } else if (g[i][k] === 0 && neighbors === 3) {\n              gridCopy[i][k] = 1;\n            }\n          }\n        }\n      });\n    });\n    setTimeout(runSimulation, 1000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setRunning(!running);\n\n        if (!running) {\n          runningRef.current = true;\n          runSimulation();\n        }\n      },\n      children: running ? 'Stop' : 'Start'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: `repeat(${numCols},20px)`\n      },\n      children: grid.map((rows, i) => rows.map((col, k) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          const newGrid = produce(grid, gridCopy => {\n            gridCopy[i][k] = grid[i][k] ? 0 : 1;\n          });\n          setGrid(newGrid);\n        },\n        style: {\n          width: 20,\n          height: 20,\n          backgroundColor: grid[i][k] ? 'pink' : undefined,\n          border: 'solid 1px black'\n        }\n      }, `${i}-${k}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"LrgIjGqktzLiIKH7GCsdmmlzR/E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useRef","produce","numRows","numCols","operations","App","grid","setGrid","rows","i","push","Array","from","running","setRunning","runningRef","current","runSimulation","g","gridCopy","k","neighbors","forEach","x","y","newI","newK","setTimeout","display","gridTemplateColumns","map","col","newGrid","width","height","backgroundColor","undefined","border"],"sources":["/Users/leonhard/Documents/Leonhardâ€˜s work/react/Game-of-Live/src/App.jsx"],"sourcesContent":["import './App.css';\nimport React, {useState, useCallback, useRef} from 'react';\nimport produce from 'immer';\n\nconst numRows =50;\nconst numCols = 50;\nconst operations = [\n  [0,1],\n  [0,-1],\n  [1,1],\n  [1,-1],\n  [-1,1],\n  [-1,-1],\n  [-1,0],\n  [1,0],\n]\nfunction App() {\n  const [grid, setGrid] = useState(() => {\n    const rows = [];\n    for (let i = 0; i <numRows; i++){\n      rows.push(Array.from(Array(numCols), () => 0));\n    }\n    return rows;\n  })\n  // console.log(grid);\n  const [running, setRunning] = useState(false)\n  const runningRef = useRef(running)\n  runningRef.current = running\n  const runSimulation = useCallback(() => {\n    if (!runningRef.current) {\n      return;\n    }\n\n    setGrid( g =>{\n      return produce(g, gridCopy => {\n        for (let i = 0; i < numRows; i++) {\n          for (let k =0; k < numCols; k++) {\n            let neighbors = 0;\n            operations.forEach(([x,y]) => {\n              const newI = x + i;\n              const newK = y + k;\n              if (newI >=0 && newI < numRows && newK >=0 && newK <numCols) {\n                neighbors += g[newI][newK]\n              }\n            })\n            if (neighbors < 2 || neighbors > 3) {\n              gridCopy[i][k] = 0; \n            } else if (g[i][k] === 0 && neighbors ===3) {\n              gridCopy[i][k] = 1;\n            }\n          }\n        }\n      })\n    })\n    setTimeout(runSimulation,1000)\n  },[])\n  return (\n    <>\n      <button onClick={() => {\n        setRunning(!running);\n        if (!running) {\n        runningRef.current = true\n        runSimulation()}\n      }}>\n        {running ? 'Stop' : 'Start'}\n      </button>\n      <div style={{\n        display:'grid',\n        gridTemplateColumns: `repeat(${numCols},20px)`\n      }}>\n        {grid.map((rows,i) => \n          rows.map((col,k) => (\n            <div\n              key={`${i}-${k}`}\n              onClick={() => {\n                const newGrid = produce(grid, gridCopy => {\n                  gridCopy[i][k] = grid[i][k]? 0 : 1;\n                })\n                setGrid(newGrid)\n              }}\n              style={{\n                width: 20,\n                height: 20,\n                backgroundColor: grid[i][k] ? 'pink' : undefined,\n                border: 'solid 1px black'\n              }}\n            \n            />\n          )\n        )\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}